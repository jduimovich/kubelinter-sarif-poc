{
  "version": "2.1.0",
  "runs": [
    {
      "originalUriBaseIds": {
        "PROJECTROOT": {
          "uri": "g:\\Dev\\kubelinter-sarif-poc",
          "description": {
            "text": "The root directory for all project files."
          }
        }
      },
      "tool": {
        "driver": {
          "name": "Kubelinter",
          "rules": [
            {
              "id": 0,
              "shortDescription": {
                "text": "dangling-service"
              },
              "fullDescription": {
                "text": "(check: dangling-service, remediation: Make sure your service's selector correctly matches the labels on one of your deployments.)"
              },
              "help": {
                "text": "text for help",
                "markdown": "markdown ***text for help"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": []
              }
            },
            {
              "id": 1,
              "shortDescription": {
                "text": "no-anti-affinity"
              },
              "fullDescription": {
                "text": "(check: no-anti-affinity, remediation: Specify anti-affinity in your pod spec to ensure that the orchestrator attempts to schedule replicas on different nodes. You can do this by using podAntiAffinity, specifying a labelSelector that matches pods of this deployment, and setting the topologyKey to kubernetes.io/hostname. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for more details.)"
              },
              "help": {
                "text": "text for help",
                "markdown": "markdown ***text for help"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "tags": []
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": 0,
          "message": {
            "text": "(check: dangling-service, remediation: Make sure your service's selector correctly matches the labels on one of your deployments.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/services/service.yaml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": 1,
          "message": {
            "text": "(check: no-anti-affinity, remediation: Specify anti-affinity in your pod spec to ensure that the orchestrator attempts to schedule replicas on different nodes. You can do this by using podAntiAffinity, specifying a labelSelector that matches pods of this deployment, and setting the topologyKey to kubernetes.io/hostname. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for more details.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/services/fib-go/deployment.yaml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "message": {
            "text": "(check: no-anti-affinity, remediation: Specify anti-affinity in your pod spec to ensure that the orchestrator attempts to schedule replicas on different nodes. You can do this by using podAntiAffinity, specifying a labelSelector that matches pods of this deployment, and setting the topologyKey to kubernetes.io/hostname. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for more details.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/services/fib-node/deployment.yaml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "message": {
            "text": "(check: no-anti-affinity, remediation: Specify anti-affinity in your pod spec to ensure that the orchestrator attempts to schedule replicas on different nodes. You can do this by using podAntiAffinity, specifying a labelSelector that matches pods of this deployment, and setting the topologyKey to kubernetes.io/hostname. See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity for more details.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deploy/services/fib-quarkus/deployment.yaml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
